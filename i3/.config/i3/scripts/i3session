#!/usr/bin/env bash
# https://github.com/deuill/dotfiles/blob/master/.config/i3/bin/session
## Fixed windows titles with spaces
## Get window list for all workspaces.

# The cache directory for all persistent session data.
cache_dir="${HOME}/.cache/i3"

# Create shared cache directory.
mkdir -p "${cache_dir}"

function i3session--windows() {
  #wmctrl -l -p -x | awk '{printf "%s %d %s\n", $1, $3, $4}'
  # Fixed from the original code, window titles can contain spaces
  #wmctrl -l -p -x | awk -F '[[:space:]][[:space:]]+' '{print $1,substr($2,3),$3}'
  wmctrl -l -p -x | awk -F '[[:space:]][[:space:]]+' '{printf "%s\t%d\t%s\t\n",$1,substr($2,3),$3}'
}

## Get layout for workspace nameber.
function i3session--workspace-layout() {
	local name="$1"

	read -r -d '' cleanup <<-'EOM'
		NR == 1 {next}                    # Skip first line in document.
		$0 ~ "// \"title" {next}          # Skip title match for window.
		$0 ~ "// \"" {sub("// \"", "\"")} # Uncomment window definitions.
		$0 ~ "//" {next}                  # Remove all other comments
		{gsub("\\\\", ""); print}         # Remove all backslash escapes.
	EOM

	awk "${cleanup}" <<< "$(i3-save-tree --workspace "${name}")" | jq -sr '.'
}

## Get window class list from layout.
function i3session--layout-classes() {
	local layout="$1"

	# Clean window instance and class names.

	#{gsub("\\$\\^", "."); print substr($0, 3, length($0) - 4)}
  # Fixed from the original code, window titles can contain spaces
	read -r -d '' cleanup <<-'EOM'
    {gsub("\\$\\^", ".");gsub("\\\\","");printf "%s\t\n",substr($0, 3, length($0) - 4)}
	EOM

  jq '.. | .swallows? | .[]? | .instance + .class' <<< "${layout}" | awk "${cleanup}"
}


## Get command list from layout.
function i3session--layout-commands() {
	local commands=()
	local windows=$(i3session--windows)
	local classes=$(i3session--layout-classes "$1")

	while read class
	do
		#local id=$(awk '$3 ~ "'"${class}"'" {print $1; exit}' <<< "${windows}")
		#local pid=$(awk '$3 ~ "'"${class}"'" {print $2; exit}' <<< "${windows}")
    #echo "windows=${windows}"
    #echo "class=${class}"
		local id=$(awk -F "\t" '$3 ~ "'"${class}"'" {print $1; exit}' <<< "${windows}")
    #echo  "id=${id}"
		local pid=$(awk -F "\t" '$3 ~ "'"${class}"'" {print $2; exit}' <<< "${windows}")
    #echo  "pid=${pid}"
		local cmd=$(ps -p "${pid}" -o args --no-headers)

		commands+=('"'"${cmd}"'"')
	done <<< "${classes}"

	jq -sr '.' <<< "${commands[@]}"
}

## Save session state for future restoration.
function i3session--save() {
	local layout=()
	local commands=()

	# Save layout for each workspace in turn.
	local workspaces=$(i3-msg -t get_workspaces)

  for i in $(seq 0 $(($(jq -r '. | length' <<< "${workspaces}") - 1)))
  #for i in $(seq 0 1)
	do
		local name=$(jq -r ".[$i].name" <<< "${workspaces}")

		# Get layout for workspace.
		layout[$i]="$(i3session--workspace-layout "${name}")"

		# Get list of running commands for workspace.
		commands[$i]=$(i3session--layout-commands "${layout[$i]}")
    #echo $commands
	done

  #echo "last test"
  #echo "${layout[*]}"
  #echo "${commands[*]}"
			#"layout":  '"$(jq -sr '.' <<< '"'${layout[@]}'"')"',
			#"commands":  '"$(jq -sr '.' <<< '"'${commands[@]}'"')"',

      #"layout": '"${layout[*]}"',
	jq -r '.' <<< '{
      "layout": '"$(jq -sr '.' <<< ${layout[*]})"',
      "commands": '"$(jq -sr '.' <<< ${commands[*]})"',
	    "workspaces":'"${workspaces[*]}"'
	}' > "${cache_dir}/session.json"
}

## Restore previously saved session.
function i3session--restore() {
	# Check for existing session file.
	if [[ ! -e "${cache_dir}/session.json" ]]
	then
		echo "Session file does not exist, did you run '$0 save' first?" 1>&2
		exit 1
	fi

	local session=$(cat "${cache_dir}/session.json")
	local temp=$(mktemp)

	# Clean up temporary files on exit.
	trap "rm -f ${temp}" exit

	# Restore layout and running commands for each workspace.
	for i in $(seq 0 $(($(jq -r '.workspaces | length' <<< "${session}") - 1)))
	do
		local name=$(jq -r ".workspaces[$i].name" <<< "${session}")
		local output=$(jq -r ".workspaces[$i].output" <<< "${session}")

		jq -r ".layout[$i]" <<< "${session}" > "${temp}"
		i3-msg "workspace ${name}; append_layout ${temp}; move workspace to ${output}"

		# Run all commands for workspace.
		for c in $(seq 0 $(($(jq -r ".commands[$i] | length" <<< "${session}") - 1)))
		do
			exec $(jq -r ".commands[$i][$c]" <<< "${session}") &
		done
  done

	## Move to previously active workspaces.
	#local active=$(jq -r '.workspaces[] | select(.visible == true) | .name' <<< "${session}")
	#while read name; do i3-msg "workspace ${name}"; done <<< "${active}"
}

## Close all windows gracefully.
function i3session--close() {
    # Fetch window list.
      local windows=$(i3session--windows | awk '{print $1}')

        # Close all windows.
          while read id; do wmctrl -ic "${id}"; done <<< "${windows}"

}
